/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pryectorit;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.lang.model.type.TypeKind.NULL;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang3.StringUtils;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

/**
 *
 * @author Jorge
 */
public class PaginaPrincipal extends javax.swing.JFrame {
    public static int escalafonTemporal = 1;
    public static ArrayList<String> escalafon = new ArrayList<String>();
    /**
     * Creates new form PaginaPrincipal
     */
    public PaginaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelEscalafon = new javax.swing.JLabel();
        BotonIndexar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaIndice = new javax.swing.JTable();
        LabelArchivo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaEscalafon = new javax.swing.JTable();
        BotonIrPagina = new javax.swing.JButton();
        BotonSiguienteEscalafon = new javax.swing.JButton();
        BotonLeerArchivo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextIndice = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        TextQuery = new javax.swing.JTextArea();
        BotonBuscarQuery = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BotonPrevioEscalafon = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelEscalafon.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        LabelEscalafon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelEscalafon.setText("Escalaf칩n Creado");

        BotonIndexar.setText("Indexar");
        BotonIndexar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIndexarActionPerformed(evt);
            }
        });

        TablaIndice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Numero Archivo", "Nombre Archivo"
            }
        ));
        jScrollPane1.setViewportView(TablaIndice);

        LabelArchivo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        LabelArchivo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelArchivo.setText("Archivos a  Indexar");

        TablaEscalafon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Posici칩n", "Nombre Archivo"
            }
        ));
        jScrollPane2.setViewportView(TablaEscalafon);

        BotonIrPagina.setText("Ir  a P치gina");
        BotonIrPagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIrPaginaActionPerformed(evt);
            }
        });

        BotonSiguienteEscalafon.setText("Siguiente");
        BotonSiguienteEscalafon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSiguienteEscalafonActionPerformed(evt);
            }
        });

        BotonLeerArchivo.setText("Leer Archivos");
        BotonLeerArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLeerArchivoActionPerformed(evt);
            }
        });

        TextIndice.setColumns(20);
        TextIndice.setRows(5);
        jScrollPane3.setViewportView(TextIndice);

        TextQuery.setColumns(20);
        TextQuery.setRows(5);
        jScrollPane4.setViewportView(TextQuery);

        BotonBuscarQuery.setText("Buscar");
        BotonBuscarQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarQueryActionPerformed(evt);
            }
        });

        jLabel1.setText("Direcci칩n del indice");

        BotonPrevioEscalafon.setText("Previo");
        BotonPrevioEscalafon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPrevioEscalafonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(LabelArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LabelEscalafon, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(345, 345, 345))
            .addGroup(layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(BotonIndexar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonIrPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(252, 252, 252))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonLeerArchivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 298, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotonBuscarQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(BotonPrevioEscalafon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonSiguienteEscalafon)))
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelEscalafon, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonLeerArchivo)
                            .addComponent(BotonPrevioEscalafon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonIndexar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonIrPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonSiguienteEscalafon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonBuscarQuery)
                        .addGap(124, 124, 124))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonIndexarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIndexarActionPerformed
        try {
            try {
                // TODO add your handling code here:
                Indexar();
            } catch (FileNotFoundException ex) { 
                Logger.getLogger(PaginaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(PaginaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(PaginaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(PaginaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotonIndexarActionPerformed

    private void BotonLeerArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLeerArchivoActionPerformed
        try {
            // TODO add your handling code here:
            Archivos();
        } catch (IOException ex) {
            Logger.getLogger(PaginaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotonLeerArchivoActionPerformed

    private void BotonIrPaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIrPaginaActionPerformed
        // TODO add your handling code here:
        
        int agarrada = TablaEscalafon.getSelectedRow();
        String BodyEscalafon = escalafon.get(agarrada).split(",,,")[0];
        System.out.println(BodyEscalafon);
        
    }//GEN-LAST:event_BotonIrPaginaActionPerformed

    private void BotonBuscarQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarQueryActionPerformed
        // TODO add your handling code here:
        escalafonTemporal = 1;
        TablaEscalafon.getRowCount();
        DefaultTableModel modelo = ((DefaultTableModel)TablaEscalafon.getModel());
        for(int i =0; i < 20; i++){
            modelo.removeRow(0);
        }
        
        for(int i =0; i<20;i++){
            modelo.addRow(new Object[]{"", ""});
        }
        
        
        //ArrayList<String> escalafon = new ArrayList<String>();
        String query = TextQuery.getText();
        Lucene lucene = new Lucene();
        try {
            escalafon = lucene.buscar(TextIndice.getText(), query);
        } catch (ParseException ex) {
            Logger.getLogger(PaginaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PaginaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println(escalafon.size());
        
        for (int i=0; i<escalafon.size();i++){
            TablaEscalafon.setValueAt(i+1, i, 0);
            TablaEscalafon.setValueAt(escalafon.get(i).split(",,,")[0], i, 1);
            if(i == 19){
                break;
            }
            escalafonTemporal = escalafonTemporal+1;
        }
        System.out.println(escalafonTemporal);
        
    }//GEN-LAST:event_BotonBuscarQueryActionPerformed

    private void BotonSiguienteEscalafonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSiguienteEscalafonActionPerformed
        // TODO add your handling code here:
        int contador = 0;
        if(escalafonTemporal < escalafon.size()){
            for (int i=escalafonTemporal; i<escalafon.size();i++){            
                TablaEscalafon.setValueAt(i+1, contador, 0);
                TablaEscalafon.setValueAt(escalafon.get(i).split(",,,")[0], contador, 1);
                if(contador == 19){
                    break;
                }
                contador = contador+1;
            }            
            escalafonTemporal = escalafonTemporal+20;
        }
        else{
            JOptionPane.showMessageDialog(null, "Fin de Escalafon");
        }
    }//GEN-LAST:event_BotonSiguienteEscalafonActionPerformed

    private void BotonPrevioEscalafonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPrevioEscalafonActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int contador = 0;
        
        if(escalafonTemporal-20 > 0){
            escalafonTemporal = escalafonTemporal - 40;
            for (int i=escalafonTemporal; i<escalafon.size();i++){            
                TablaEscalafon.setValueAt(i+1, contador, 0);
                TablaEscalafon.setValueAt(escalafon.get(i).split(",,,")[0], contador, 1);
                if(contador == 19){
                    break;
                }
                contador = contador+1;
            }            
            escalafonTemporal = escalafonTemporal+20;
        }
        else{
            JOptionPane.showMessageDialog(null, "Fin de Escalafon");
        }        
    }//GEN-LAST:event_BotonPrevioEscalafonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaginaPrincipal().setVisible(true);
            }
        });
    }
    
    public void Archivos() throws IOException{
        final File folder = new File("C:\\Users\\Jorge\\Documents\\TEC\\VII Semestre\\RIT 2\\TP2 - RIT - 2018ii");
        List<String> ListaArchivos = new ArrayList<String>();
        ListaArchivos = listFilesForFolder(folder);
        System.out.println(ListaArchivos);
        for(int i = 0; i < ListaArchivos.size(); i++){
            TablaIndice.setValueAt(i+1, i, 0);
            TablaIndice.setValueAt(ListaArchivos.get(i), i, 1);
        }
    }
    
    public List listFilesForFolder(final File folder) {
        List<String> ListaArchivos = new ArrayList<String>();
        for (final File fileEntry : folder.listFiles()) {
                if (fileEntry.isDirectory()) {
                    listFilesForFolder(fileEntry);
                 } else {
                    ListaArchivos.add(fileEntry.getName());
                    /*System.out.println(fileEntry.getName());*/
            }
        }
        return ListaArchivos;
    }
    
    public void Indexar() throws IOException, FileNotFoundException, URISyntaxException, ParseException{
        final File folder = new File("C:\\Users\\Jorge\\Documents\\TEC\\VII Semestre\\RIT 2\\TP2 - RIT - 2018ii");
        List<String> ListaArchivos = new ArrayList<String>();
        ListaArchivos = listFilesForFolder(folder);        
        int FilaSeleccionada = TablaIndice.getSelectedRow();
        LeeArchivos(ListaArchivos.get(FilaSeleccionada));
    }
    
    public void LeeArchivos(String ArchivoSeleccionado) throws FileNotFoundException, IOException, URISyntaxException, ParseException{
        
                
        StandardAnalyzer analyzer = new StandardAnalyzer();

        String INDEX_DIRECTORY = TextIndice.getText();
        Directory index = FSDirectory.open(Paths.get(INDEX_DIRECTORY));
        Arrays.stream(new File(TextIndice.getText()).listFiles()).forEach(File::delete);

        IndexWriterConfig config = new IndexWriterConfig(analyzer);

        IndexWriter w = new IndexWriter(index, config);
        
        File f = new File("C:\\Users\\Jorge\\Documents\\TEC\\VII Semestre\\RIT 2\\TP2 - RIT - 2018ii\\" +ArchivoSeleccionado);
        BufferedReader br = new BufferedReader(new FileReader(f)); 
        String st; 
        int Comienza = 0;
        int Finaliza = 0;
        int contador = 0;
        //boolean salite = false;
        List<String> where = new ArrayList<String>();
        while ((st = br.readLine()) != null){
            contador+=1;
            String[] words = st.split(" ");
            for(int i =0; i < words.length; i++) {
                where.add(words[i]);
                if(words[i].equals("<!DOCTYPE")){
                    Comienza = contador;
                }
                if(words[i].equals("</html>")){
                    Finaliza = contador;
                    EscribeArchivo(w, where, Comienza, Finaliza);
                    where = new ArrayList<String>();
                }
            }
        }
        //System.out.println(where.size());
        
        w.close();
        
        }
    
    
    public void EscribeArchivo(IndexWriter w, List<String> ArchivoEscribir, int Comienza, int Finaliza) throws URISyntaxException, IOException{
                String FILENAME = "C:\\Users\\Jorge\\Documents\\TEC\\VII Semestre\\RIT 2\\TP2 - RIT - 2018ii\\filename.html";
        	try (BufferedWriter bw = new BufferedWriter(new FileWriter(FILENAME))) {
                        for(int i = 0; i < ArchivoEscribir.size(); i++){
                            bw.write(ArchivoEscribir.get(i));
                            bw.write(" ");
                        }
			System.out.println("Done");

		} catch (IOException e) {

			e.printStackTrace();
		}
                File sourceFile = new File("C:\\Users\\Jorge\\Documents\\TEC\\VII Semestre\\RIT 2\\TP2 - RIT - 2018ii\\filename.html");
                org.jsoup.nodes.Document doc = Jsoup.parse(sourceFile, "UTF-8");
                
                Element body = doc.body();
                Document DocumentoRecuperado = Jsoup.parse(body.wholeText());
                Element body2 = DocumentoRecuperado.body();
                String Cuerpo = body2.ownText();
                Cuerpo = stripAccents(Cuerpo);
                Cuerpo = Cuerpo.replaceAll("[^a-zA-Z0-9칌침]", " ");
                
                /* Buscar Headers*/
                Elements buscaHeaders = doc.select("h1, h2, h3, h4, h5, h6, h7, h8, h9");
                Elements h1Tags = buscaHeaders.select("h1");
                String headers = "";
                //List<String> h1s = new ArrayList<String>();
                Elements h2Tags = buscaHeaders.select("h2");
                Elements h3Tags = buscaHeaders.select("h3");
                Elements h4Tags = buscaHeaders.select("h4");
                Elements h5Tags = buscaHeaders.select("h5");
                Elements h6Tags = buscaHeaders.select("h6");
                Elements h7Tags = buscaHeaders.select("h7");
                Elements h8Tags = buscaHeaders.select("h8");
                Elements h9Tags = buscaHeaders.select("h9");
                
                for(int i = 0; i < h1Tags.size(); i++){
                    String temporal2 = h1Tags.get(i).ownText();
                    headers += temporal2 + " ";
                    /*String[] words = temporal2.split(" ");
                    h1s.addAll(Arrays.asList(words));*/
                }
                for(int i = 0; i < h2Tags.size(); i++){
                    String temporal2 = h2Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }              
                for(int i = 0; i < h3Tags.size(); i++){
                    String temporal2 = h3Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }                                
                for(int i = 0; i < h4Tags.size(); i++){
                    String temporal2 = h4Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }
                for(int i = 0; i < h5Tags.size(); i++){
                    String temporal2 = h5Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }
                for(int i = 0; i < h6Tags.size(); i++){
                    String temporal2 = h6Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }   
                for(int i = 0; i < h7Tags.size(); i++){
                    String temporal2 = h7Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }               
                for(int i = 0; i < h8Tags.size(); i++){
                    String temporal2 = h8Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }               
                for(int i = 0; i < h9Tags.size(); i++){
                    String temporal2 = h9Tags.get(i).ownText();
                    headers += temporal2 + " ";
                }
                
                headers = stripAccents(headers);
                headers = headers.replaceAll("[^a-zA-Z0-9칌침]", " ");
                
                /* Busca T칤tulos*/
                Elements Title = doc.select("title");
                String titulo = "";
                for(int i = 0; i < Title.size(); i++){
                    String temporal2 = Title.get(i).ownText();
                    titulo += temporal2 + " ";
                }
                String tituloOriginal = titulo;
                titulo = stripAccents(titulo);
                titulo = titulo.replaceAll("[^a-zA-Z0-9칌침]", " ");

                
                /* Busqueda de <a>*/
                Elements ref = doc.select("a[href]");
                String HyperLink = "";
                for(int i = 0; i < ref.size(); i++){
                    String temporal2 = ref.get(i).ownText();
                    HyperLink += temporal2 + " ";
                }
                
                HyperLink = stripAccents(HyperLink);
                HyperLink = HyperLink.replaceAll("[^a-zA-Z0-9칌침]", " ");
                HyperLink = HyperLink.replaceAll("[^\\p{IsDigit}\\p{IsAlphabetic}]", " ");
                
                
                
                
                //ObjetoArchivos tituloc = new ObjetoArchivos(Cuerpo, Titulos, CuerpoPalabras, HyperLinks, h1s, h2s, h3s, h4s, h5s, h6s, h7s, h8s, h9s);
                // Utilizado Para Abrir Archivo HTML desde Java
                /*String url = "file:///C:/Users/Jorge/Documents/TEC/filename.html";
                URI oURL = new URI(url);
                Desktop.getDesktop().browse(oURL);*/
                
                
                Lucene lucene = new Lucene();
                
                lucene.indexar(w, tituloOriginal, titulo.toLowerCase(), Cuerpo.toLowerCase(), HyperLink.toLowerCase(), headers.toLowerCase(), Integer.toString(Comienza).toLowerCase(), Integer.toString(Finaliza).toLowerCase());
                
                
                
    }
    
    public String stripAccents(String str){
        String ORIGINAL = "츼치칄칠칈칤칍칩칔칰칖칲";
        String REPLACEMENT = "AaEeIiOoUuUu";

            if (str == null) {
                return null;
            }
            char[] array = str.toCharArray();
            for (int index = 0; index < array.length; index++) {
                int pos = ORIGINAL.indexOf(array[index]);
                if (pos > -1) {
                    array[index] = REPLACEMENT.charAt(pos);
                }
            }
            return new String(array);
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBuscarQuery;
    private javax.swing.JButton BotonIndexar;
    private javax.swing.JButton BotonIrPagina;
    private javax.swing.JButton BotonLeerArchivo;
    private javax.swing.JButton BotonPrevioEscalafon;
    private javax.swing.JButton BotonSiguienteEscalafon;
    private javax.swing.JLabel LabelArchivo;
    private javax.swing.JLabel LabelEscalafon;
    private javax.swing.JTable TablaEscalafon;
    private javax.swing.JTable TablaIndice;
    private javax.swing.JTextArea TextIndice;
    private javax.swing.JTextArea TextQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
